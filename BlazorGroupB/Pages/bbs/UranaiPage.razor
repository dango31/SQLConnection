@page "/UranaiPage"
@using BlazorGroupB.Data
@using BlazorGroupB.Data.DAO;
@using BlazorGroupB.Models
@using System.Text
@using Microsoft.EntityFrameworkCore
@using System.Configuration
@using Npgsql
@using System.Data
@using System.Diagnostics
@using BlazorGroupB.Data.Utility
@inject BlazorGroupB.Data.BlazorGroupBDbContext _contextUranais
@inject NavigationManager NaviManager

<button class="btn btn-primary" @onclick="BackTopPage">トップページ</button>
<h3>今日の運勢は・・・@unOne.Fortune！</h3>

@code {

    //  占いの一つの結果を保持
    Uranais unOne = new Uranais();

    //  ランダムクラスのインスタンス
    Random rn = new Random();

    //  ランダムによって生成された値の保持
    int fortuneNumber = 0;

    /// <summary>
    /// 最初に起動される。占いのデータを取り出して結果を保持する
    /// </summary>
    /// <returns></returns>
    protected override async Task OnInitializedAsync()
    {
        try
        {
            RandomUranai();

            List<Uranais> uranais = new List<Uranais>();
            //  データベースからデータを取り出す
            uranais = await _contextUranais.Uranais.Where(m => m.UranaiID == fortuneNumber).ToListAsync<Uranais>();
            unOne = uranais[0];
        }
        catch
        {
            NaviManager.NavigateTo("/Error", forceLoad: true);
        }

    }

    /// <summary>
    /// ランダムから値を取り出す
    /// </summary>
    private void RandomUranai()
    {
        fortuneNumber = rn.Next(1, 7);
    }

    /// <summary>
    /// トップページに戻る
    /// </summary>
    public void BackTopPage()
    {
        try
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("/");
            NaviManager.NavigateTo(sb.ToString(), forceLoad: true);
        }
        catch
        {
            NaviManager.NavigateTo("/Error", forceLoad: true);
        }

    }
}
